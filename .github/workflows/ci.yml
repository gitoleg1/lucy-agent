name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  agent-ci:
    name: Agent CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # התקנת תלויות. אם אין requirements, נתקין מינימום להרצת האפליקציה והלינט
      - name: Install deps
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f requirements.txt ]]; then
            python -m pip install -U pip
            pip install -r requirements.txt
            pip install ruff black
          else
            python -m pip install -U pip
            pip install fastapi uvicorn ruff black
          fi

      # מידעוני בלבד – לא מפיל את ה־CI אם אין pre-commit
      - name: Pre-commit (informational)
        shell: bash
        continue-on-error: true
        run: |
          set -euo pipefail
          if python -c "import pre_commit" 2>/dev/null; then
            pre-commit run -a || true
          else
            echo "pre-commit not installed; skipping (informational)."
          fi

      - name: Ruff (lint)
        run: ruff check .

      - name: Black (check)
        run: black --check .

      - name: Health smoke (local)
        shell: bash
        run: |
          set -euo pipefail

          on_exit() {
            # הדפסת לוגים אם נוצרו
            if [[ -f .api.log ]]; then
              echo "===== .api.log (tail) ====="
              tail -n +200 .api.log || true
            else
              echo ".api.log not found"
            fi
            # סגירת uvicorn אם רץ
            if [[ -f .uvicorn.pid ]]; then
              kill "$(cat .uvicorn.pid)" 2>/dev/null || true
              rm -f .uvicorn.pid || true
            fi
          }
          trap on_exit EXIT

          # הפעלת uvicorn ברקע עם ניתוב לוגים
          nohup python -m uvicorn src.main:app \
            --host 127.0.0.1 --port 8000 --workers 1 --no-access-log \
            > .api.log 2>&1 & echo $! > .uvicorn.pid

          # המתנה ל־/health עד 20 שניות, בדיקה כל שנייה
          ok=0
          code=000
          for i in {1..20}; do
            sleep 1
            code=$(curl -s -o /dev/null -w '%{http_code}' http://127.0.0.1:8000/health || echo 000)
            if [[ "$code" == "200" ]]; then
              ok=1
              break
            fi
          done

          if [[ "$ok" -ne 1 ]]; then
            echo "health expected 200, got $code"
            exit 1
          fi

          echo "Health check OK"
