name: CI

on:
  push:
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Prepare artifact dirs (always)
        run: |
          set -euxo pipefail
          mkdir -p logs

      - name: Capture env & tool versions
        run: |
          set -euxo pipefail
          {
            echo "=== uname -a ==="
            uname -a
            echo "=== lsb_release -a ==="
            lsb_release -a || true
            echo "=== python -V ==="
            python -V
            echo "=== pip --version ==="
            pip --version
          } | tee logs/env.txt

      - name: Install deps (capture full pip logs)
        run: |
          set -euxo pipefail
          # שדרוג כלים בסיסיים
          python -m pip install -U pip setuptools wheel > >(tee logs/pip-bootstrap.out) 2> >(tee logs/pip-bootstrap.err >&2)
          # התקנת תלויות (stdout+stderr נשמרים)
          python -m pip install -r requirements.txt -vvv > >(tee logs/pip-install.out) 2> >(tee logs/pip-install.err >&2)
          # בדיקת קונפליקטים בין חבילות
          python -m pip check | tee logs/pip-check.out
          # צילום גרסאות של מודולים רלוונטיים
          python - <<'PY' | tee logs/import-versions.txt
import importlib
mods = ["fastapi","starlette","pydantic","httpx","uvicorn","sqlalchemy"]
for m in mods:
    try:
        mod = importlib.import_module(m)
        v = getattr(mod, "__version__", "n/a")
        print(f"{m}=={v}")
    except Exception as e:
        print(f"{m} IMPORT_ERROR: {e}")
PY
          # הקפאה מלאה (לשם דיבוג עתידי)
          python -m pip freeze | tee logs/pip-freeze.txt

      - name: Import sanity (src-layout)
        run: |
          set -euxo pipefail
          export PYTHONPATH=src
          python - <<'PY'
import importlib
mods = ["lucy_agent.api","lucy_agent.__init__","fastapi","starlette"]
for m in mods:
    try:
        importlib.import_module(m)
        print("OK:", m)
    except Exception as e:
        print("FAIL:", m, "->", e)
        raise
PY
          echo "import sanity done" | tee -a logs/pytest.out

      - name: Run tests (pytest)
        run: |
          set -euxo pipefail
          export PYTHONPATH=src
          # לשמר את קוד היציאה של pytest למרות השימוש ב-tee
          pytest -q -vv tests | tee logs/pytest.out
          test ${PIPESTATUS[0]} -eq 0

      - name: Upload artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-artifacts
          path: |
            logs/**
          if-no-files-found: warn
          retention-days: 7
