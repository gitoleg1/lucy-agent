name: CI

on:
  push:
  pull_request:

jobs:
  ci:
    runs-on: ubuntu-24.04
    env:
      PYTHONUNBUFFERED: "1"
      PYTHONPATH: src
      APP_MODULE: lucy_agent.main:app
      HOST: 127.0.0.1
      PORT: "8000"
      SMOKE_ARTIFACT: smoke-artifacts

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Ensure jq is available
        shell: bash
        run: |
          set -euo pipefail
          if ! command -v jq >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y jq
          fi
          jq --version

      - name: Pre-create artifacts dirs (always)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p artifacts/json artifacts/logs artifacts/tmp
          : > /tmp/api.out || true

      - name: Install deps (venv) + expose VENV_PY to later steps
        shell: bash
        run: |
          set -euxo pipefail
          python -m venv .venv
          ./.venv/bin/python -m pip install --upgrade pip
          ( [ -f requirements.txt ] && ./.venv/bin/python -m pip install -r requirements.txt ) || true
          # Make sure FastAPI + Uvicorn exist even if requirements.txt is empty
          ./.venv/bin/python -m pip install fastapi uvicorn
          # Export venv python path for subsequent steps
          echo "VENV_PY=$PWD/.venv/bin/python" >> "$GITHUB_ENV"

      - name: Import sanity (src-layout)
        shell: bash
        run: |
          set -euo pipefail
          "$VENV_PY" - <<'PY'
          import importlib, sys
          print(f"using interpreter: {sys.executable}")
          m = importlib.import_module("lucy_agent.main")
          assert hasattr(m, "app"), "lucy_agent.main חייב להכיל app של FastAPI"
          print("import sanity: OK")
          PY

      - name: Boot API (background) + wait for /health
        shell: bash
        run: |
          set -euxo pipefail
          # Boot (src-layout aware)
          ( "$VENV_PY" -m uvicorn --app-dir src "$APP_MODULE" --host "$HOST" --port "$PORT" \
              | tee -a /tmp/api.out ) &
          echo $! > /tmp/api.pid

          # Wait for health (up to ~20s)
          for i in {1..40}; do
            if curl -fsS "http://$HOST:$PORT/health" >/dev/null; then
              echo "health: OK" | tee artifacts/logs/smoke.log
              exit 0
            fi
            sleep 0.5
          done

          echo "health: TIMEOUT" | tee -a artifacts/logs/smoke.log
          exit 1

      - name: Run smoke v11 (sample)
        if: success()
        shell: bash
        run: |
          set -euo pipefail
          # כאן תריץ בדיקות/עישון אמיתיות שלך. נשמור דוגמה קצרה:
          curl -fsS "http://$HOST:$PORT/health" | jq '.' | tee artifacts/json/health.json

      - name: Stop API (best-effort)
        if: always()
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f /tmp/api.pid ]]; then
            kill "$(cat /tmp/api.pid)" 2>/dev/null || true
            sleep 1 || true
          fi
          # make sure port is free
          fuser -k "${PORT}/tcp" || true

      - name: Debug tails on failure
        if: failure()
        shell: bash
        run: |
          set -euo pipefail
          echo "==== tail /tmp/api.out ===="
          tail -n 200 /tmp/api.out 2>/dev/null || echo "no /tmp/api.out"
          echo "==== smoke.log (first 200 lines) ===="
          sed -n '1,200p' artifacts/logs/smoke.log 2>/dev/null || echo "no artifacts/logs/smoke.log"

      - name: Upload smoke artifacts (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SMOKE_ARTIFACT }}
          if-no-files-found: warn
          path: |
            artifacts/**
            /tmp/api.out
